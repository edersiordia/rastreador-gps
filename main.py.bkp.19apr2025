from fastapi import FastAPI, HTTPException
from pydantic import BaseModel

app = FastAPI()

ubicaciones = {}
entregados = set()

class Ubicacion(BaseModel):
    lat: float
    lng: float

@app.post("/ubicacion/{pedido_id}")
def actualizar_ubicacion(pedido_id: str, ubicacion: Ubicacion):
    if pedido_id in entregados:
        raise HTTPException(status_code=403, detail="Pedido ya entregado")
    ubicaciones[pedido_id] = {"lat": ubicacion.lat, "lng": ubicacion.lng}
    return {"mensaje": "Ubicación actualizada"}

@app.get("/ubicacion/{pedido_id}")
def obtener_ubicacion(pedido_id: str):
    if pedido_id in entregados:
        raise HTTPException(status_code=403, detail="Pedido ya fue entregado")
    ubicacion = ubicaciones.get(pedido_id)
    if not ubicacion:
        raise HTTPException(status_code=404, detail="Ubicación no disponible")
    return ubicacion

@app.post("/entregado/{pedido_id}")
def marcar_entregado(pedido_id: str):
    entregados.add(pedido_id)
    ubicaciones.pop(pedido_id, None)
    return {"mensaje": "Pedido marcado como entregado"}

